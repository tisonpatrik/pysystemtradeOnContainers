services:
  raw_data:
    build:
      context: .
      dockerfile: raw_data/Dockerfile
    hostname: raw_data
    container_name: raw_data
    depends_on:
      - db_postgres
    ports:
      - "8000:8000"
    volumes:
      - ./raw_data/src/raw_data:/app/raw_data
      - ./common:/app/common

  rules:
    build:
      context: .
      dockerfile: rules/Dockerfile
    hostname: rules
    container_name: rules
    depends_on:
      - db_postgres
    ports:
      - "8100:8000"
    volumes:
      - ./rules/src/rules:/app/rules
      - ./common:/app/common

  positions:
    build:
      context: .
      dockerfile: positions/Dockerfile
    hostname: positions
    container_name: positions
    depends_on:
      - db_postgres
    ports:
      - "8200:8000"
    volumes:
      - ./positions/src/positions:/app/positions
      - ./common:/app/common

  forecast:
    build:
      context: .
      dockerfile: forecast/Dockerfile
    hostname: forecast
    container_name: forecast
    depends_on:
      - db_postgres
    ports:
      - "8300:8000"
    volumes:
      - ./forecast/src/forecast:/app/forecast
      - ./common:/app/common

  db_postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: postgres
    hostname: ${DB_HOST}
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-postgres:/var/lib/postgresql/data
      - ./database/data:/data:rw

  redis:
    image: redis:latest
    container_name: "redis"
    hostname: "redis"
    restart: always
    ports:
      - 6380:6379

volumes:
  db-postgres:
    driver: local
  redis:
    driver: local
