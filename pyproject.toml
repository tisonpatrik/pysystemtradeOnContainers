[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --cov=risk --cov=common --cov-report=term-missing:skip-covered"
testpaths = [
    "common/tests",
    "positions/tests",
    "raw_data/tests",
    "risk/tests",
    "rules/tests",
    "seeder/tests",
]
pythonpath = [".", "common", "positions", "raw_data", "risk", "rules", "seeder"]

[tool.ruff]
line-length = 140
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

exclude = [
    ".git",
    ".mypy_cache",
    ".pyenv",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "venv",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
plugins = ["pydantic.mypy", "pandera.mypy"]

ignore_missing_imports = true
warn_redundant_casts = false
warn_unused_ignores = false
disallow_any_generics = false
check_untyped_defs = false
no_implicit_reexport = false

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
