"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Accel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    LFAST_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    lfast: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        lfast: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["lfast", b"lfast", "scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___Accel = Accel

@typing.final
class AssertTrend(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    LFAST_FIELD_NUMBER: builtins.int
    LSLOW_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    lfast: builtins.int
    lslow: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        lfast: builtins.int = ...,
        lslow: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["lfast", b"lfast", "lslow", b"lslow", "scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___AssertTrend = AssertTrend

@typing.final
class Breakout(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    LOOKBACK_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    lookback: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        lookback: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["lookback", b"lookback", "scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___Breakout = Breakout

@typing.final
class Carry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    SMOOTH_DAYS_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    smooth_days: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        smooth_days: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "smooth_days", b"smooth_days", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___Carry = Carry

@typing.final
class CSMeanReversion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    HORIZON_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    horizon: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        horizon: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["horizon", b"horizon", "scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___CSMeanReversion = CSMeanReversion

@typing.final
class Momentum(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    LFAST_FIELD_NUMBER: builtins.int
    LSLOW_FIELD_NUMBER: builtins.int
    USE_ATTENUATION_FIELD_NUMBER: builtins.int
    SCALING_FACTOR_FIELD_NUMBER: builtins.int
    SCALING_TYPE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    lfast: builtins.int
    lslow: builtins.int
    use_attenuation: builtins.bool
    scaling_factor: builtins.float
    scaling_type: builtins.str
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        lfast: builtins.int = ...,
        lslow: builtins.int = ...,
        use_attenuation: builtins.bool = ...,
        scaling_factor: builtins.float = ...,
        scaling_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["lfast", b"lfast", "lslow", b"lslow", "scaling_factor", b"scaling_factor", "scaling_type", b"scaling_type", "symbol", b"symbol", "use_attenuation", b"use_attenuation"]) -> None: ...

global___Momentum = Momentum

@typing.final
class RuleRequest(google.protobuf.message.Message):
    """Generic rule request (for different types of rules)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCEL_FIELD_NUMBER: builtins.int
    ASSERT_TREND_FIELD_NUMBER: builtins.int
    BREAKOUT_FIELD_NUMBER: builtins.int
    CARRY_FIELD_NUMBER: builtins.int
    CS_MEAN_REVERSION_FIELD_NUMBER: builtins.int
    MOMENTUM_FIELD_NUMBER: builtins.int
    @property
    def accel(self) -> global___Accel: ...
    @property
    def assert_trend(self) -> global___AssertTrend: ...
    @property
    def breakout(self) -> global___Breakout: ...
    @property
    def carry(self) -> global___Carry: ...
    @property
    def cs_mean_reversion(self) -> global___CSMeanReversion: ...
    @property
    def momentum(self) -> global___Momentum: ...
    def __init__(
        self,
        *,
        accel: global___Accel | None = ...,
        assert_trend: global___AssertTrend | None = ...,
        breakout: global___Breakout | None = ...,
        carry: global___Carry | None = ...,
        cs_mean_reversion: global___CSMeanReversion | None = ...,
        momentum: global___Momentum | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["accel", b"accel", "assert_trend", b"assert_trend", "breakout", b"breakout", "carry", b"carry", "cs_mean_reversion", b"cs_mean_reversion", "momentum", b"momentum", "rule", b"rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["accel", b"accel", "assert_trend", b"assert_trend", "breakout", b"breakout", "carry", b"carry", "cs_mean_reversion", b"cs_mean_reversion", "momentum", b"momentum", "rule", b"rule"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["rule", b"rule"]) -> typing.Literal["accel", "assert_trend", "breakout", "carry", "cs_mean_reversion", "momentum"] | None: ...

global___RuleRequest = RuleRequest

@typing.final
class RulesBatchRequest(google.protobuf.message.Message):
    """Main request containing multiple rules and variants"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RULES_FIELD_NUMBER: builtins.int
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RuleRequest]:
        """Multiple rules"""

    def __init__(
        self,
        *,
        rules: collections.abc.Iterable[global___RuleRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["rules", b"rules"]) -> None: ...

global___RulesBatchRequest = RulesBatchRequest

@typing.final
class RulesBatchResponse(google.protobuf.message.Message):
    """Main response containing a single combined result"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERIES_FIELD_NUMBER: builtins.int
    series: builtins.bytes
    """Combined result for all rules"""
    def __init__(
        self,
        *,
        series: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["series", b"series"]) -> None: ...

global___RulesBatchResponse = RulesBatchResponse
